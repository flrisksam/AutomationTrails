Collections: Framework

Collection: Interface (Representing group of objects)
List: Sub Interface (Insertion order, Allow dupliate, resizeable, any datatype, starts 0)
	ArrayList: Class (Adv: fast Ele Retive, Dis: Insert/Delete slow)
		ArrayList al = new ArrayList();
		al.add(90);al.add(10);al.add('c');al.add("myArrayList");al.add(true);al.add("myArrayList");
		Sys.out.println("ArrayList"+al+" ArrayList "+al.size());
		Sys.out.println("Add "+al.add(3, "insertedValue")+"set "+al.set(1, 11)+" Remove "+removeal.remove(4);
		Sys.out.println(al.contains("insertedValue")+" value in 3"+al.get(3)+" indexof"+al.indexof("myArrayList")+" last index of "+al.lastIndexOf("myArrayList");
		ArrayList al2 = new ArrayList();
		Sys.out.println("Add arraylist from arrayList "+al2.addAll(al));
		Sys.out.println("Remove all from arrayList "+al2.removeAll(al));
		ArrayList al3 = new ArrayList(); al3.add(1);al3.add(20);al3.add(3);al3.add(8);
		Sys.out.println("Add arraylist by index "+al3.addAll(1, al2));
		List lst = al3.subList(1,3);Sys.out.println("Get a range by index "+lst+" arrayList is empty "+al2.isEmpty);
	LinkedList: Class (Dis: fast Ele Retive, Adv: Insert/Delete slow)
		LinkedList ll = new LinkedList();
		//Following methods are similar to ArrayList methods add, addAll, size, get, set, remove, removeAll, contains, indexof, lastIndexOf, isEmpty
		ll.addFirst(22);ll.addLast(2);ll.getFirst();ll.getLast();
		ll.poll();/*Remove first*/ll.pollFirst();ll.pollLast();
		ll.offer();/*Add last*/ll.offerFirst();ll.offerLast();
		ll.clear();LinkedList ll2 = (LinkedList)ll.clone();
